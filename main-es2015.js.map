{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/favorites/favorites.component.ts","./src/app/components/favorites/favorites.component.html","./src/app/components/forecast/forecast.component.ts","./src/app/components/forecast/forecast.component.html","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/weather/weather.component.ts","./src/app/components/weather/weather.component.html","./src/app/search.pipe.ts","./src/app/services/weather.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { WeatherComponent } from './components/weather/weather.component';\r\nimport { FavoritesComponent } from './components/favorites/favorites.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: WeatherComponent},\r\n  { path: 'Favorites', component: FavoritesComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'weatherApp';\r\n}\r\n","<app-header></app-header>\r\n<section>\r\n  <router-outlet></router-outlet>\r\n</section>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { FavoritesComponent } from './components/favorites/favorites.component';\r\nimport { WeatherComponent } from './components/weather/weather.component';\r\nimport { AccuweatherIconPipe } from './search.pipe';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { ForecastComponent } from './components/forecast/forecast.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    WeatherComponent,\r\n    FavoritesComponent,\r\n    AccuweatherIconPipe,\r\n    ForecastComponent,\r\n    HeaderComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    MatAutocompleteModule,\r\n    MatInputModule,\r\n    MatSliderModule,\r\n    ReactiveFormsModule,\r\n    FormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-favorites',\r\n  templateUrl: './favorites.component.html',\r\n  styleUrls: ['./favorites.component.scss']\r\n})\r\nexport class FavoritesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","<p>favorites works!</p>\r\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\r\nimport { WeatherService } from '../../services/weather.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { CurrentConditions } from '../../models/current-conditions';\r\nimport { FiveDaysForecast } from '../../models/five-days-forcast';\r\n\r\n@Component({\r\n  selector: 'app-forecast',\r\n  templateUrl: './forecast.component.html',\r\n  styleUrls: ['./forecast.component.scss']\r\n})\r\nexport class ForecastComponent implements OnInit, OnDestroy {\r\n\r\n  weatherSub: Subscription;\r\n  weatherWeekSub: Subscription;\r\n\r\n  cityID: Number = 215854;\r\n  @Input () currentCity: CurrentConditions;\r\n  fiveDaysForcast: FiveDaysForecast;\r\n\r\n  constructor(private weatherService: WeatherService) { }\r\n\r\n  ngOnInit(): void {\r\n     this.weatherSub = this.weatherService.getTelAviv().subscribe((data: CurrentConditions) => {\r\n      if(!data[0]) return {};\r\n      this.currentCity = data[0];\r\n    })\r\n    this.weatherWeekSub = this.weatherService.getFiveDaysForecast(this.cityID).subscribe((data: FiveDaysForecast) => {\r\n      this.currentCity.Daily = data.DailyForecasts;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n      this.weatherWeekSub.unsubscribe();\r\n      this.weatherSub.unsubscribe();\r\n  }\r\n\r\n}\r\n","<!-- DEFAULT TELAVIV -->\r\n\r\n<div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"current\" *ngIf=\"currentCity\">\r\n        <h1>{{ currentCity.LocalObservationDateTime | date: 'fullDate' }}</h1>\r\n        <h1>{{ currentCity.WeatherText }}</h1>\r\n        <h1>{{ currentCity.Temperature.Metric.Value }}C</h1>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <!-- 5 DAY DEFAULT -->\r\n  <div class=\"container\">\r\n    <div class=\"row\" *ngIf=\"currentCity && currentCity.Daily\">\r\n      <div class=\"bigCard bg-light mb-3\" style=\"max-width: 18rem;\" *ngFor=\"let cityForecast of currentCity.Daily\">\r\n        <div class=\"card-header\">{{ cityForecast.Date | date: 'fullDate'}}</div>\r\n        <div class=\"card-body\">\r\n          <h2 class=\"card-title\">{{ cityForecast.Day.IconPhrase }}</h2>\r\n          <div class=\"card-icon\"><img src=\"{{cityForecast.Day.Icon | accuweatherIcon }}\"/></div>\r\n        </div>\r\n      </div>\r\n  </div>\r\n  </div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  \r\n  navButtons = [\r\n    {routerLink: '/', logo: 'Home'},\r\n    {routerLink: '/Favorites', logo: 'Favorites'}\r\n  ];\r\n}\r\n","<header>\r\n    <nav class=\"navbar navbar-expand-md stiky-top\">\r\n      <div class=\"container-fluid\">\r\n        <a class=\"navbar-brand\" routerLink=\"/\"><img src=\"../assets/pngfuel.jpg.png\"></a>\r\n        <div class=\"collapse navbar-collapse\">\r\n          <ul class=\"navbar-nav ml-auto\">\t\t\t\t\t\t\t\t\r\n            <li class=\"nav-item\" *ngFor=\"let navButton of navButtons\">\r\n              <a class=\"nav-link\" [routerLink]=\"[navButton.routerLink]\">{{ navButton.logo }}</a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  </header>","import { Component, OnInit } from '@angular/core';\r\nimport { WeatherService } from '../../services/weather.service';\r\nimport { FormControl}  from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { AutoCompleteSearch } from '../../models/autoCompleteSearch';\r\nimport { CurrentConditions } from '../../models/current-conditions';\r\nimport { DailyForecasts, FiveDaysForecast } from '../../models/five-days-forcast';\r\n\r\n@Component({\r\n  selector: 'app-weather',\r\n  templateUrl: './weather.component.html',\r\n  styleUrls: ['./weather.component.scss']\r\n})\r\nexport class WeatherComponent implements OnInit {\r\n\r\n  search: AutoCompleteSearch[];\r\n  cities = [];\r\n  // defualt city : tel aviv\r\n  cityID: Number = 215854;\r\n  control = new FormControl();\r\n  filteredCities: Observable<string[]>;\r\n  currentCity: CurrentConditions;\r\n\r\n  constructor(private weatherService: WeatherService) { }\r\n\r\n  ngOnInit() {\r\n    this.filteredCities = this.control.valueChanges.pipe(\r\n     startWith(''),\r\n     map(value => this.autoCompleteSearch(value))\r\n    );\r\n  }\r\n\r\n  currentConditions() {\r\n    this.weatherService.getCurrentConditions(this.cityID).subscribe((data: CurrentConditions) => {\r\n      this.currentCity = data[0];\r\n    });\r\n    this.weatherService.getFiveDaysForecast(this.cityID).subscribe((data: FiveDaysForecast) => {\r\n      this.currentCity.Daily = data.DailyForecasts;\r\n    });\r\n  }\r\n\r\n  autoCompleteSearch(value: string): string[]{\r\n    this.weatherService.getAutoCompleteSerach(value).subscribe((data: any) => {\r\n      if(!data) return [];\r\n      this.cities = data.map(item => item.LocalizedName || '');\r\n      this.cityID = data[0].Key;\r\n      return data;\r\n    });\r\n    return this.cities;\r\n  }\r\n\r\n}\r\n","<div class=\"navbar navbar-light bg-light\">\r\n  <form class=\"form-inline\">\r\n    <input type=\"search\"\r\n          placeholder=\"Search for city\"\r\n          [formControl]=\"control\"\r\n          [matAutocomplete]=\"auto\"\r\n          aria-label=\"Search\"\r\n          class=\"form-control mr-sm-2\">\r\n    <button class=\"btn btn-outline-secondary my-2 my-sm-0\" type=\"button\" (click)=\"currentConditions()\">Check Weather</button>\r\n    <mat-autocomplete #auto=\"matAutocomplete\">\r\n      <mat-option *ngFor=\"let city of filteredCities | async\" [value]=\"city\">\r\n        {{ city }}\r\n      </mat-option>\r\n    </mat-autocomplete>\r\n  </form>\r\n</div>\r\n<app-forecast [currentCity]=\"currentCity\"></app-forecast>\r\n\r\n\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nexport const icons = `https://developer.accuweather.com/sites/default/files`;\r\n\r\n@Pipe({\r\n  name: 'accuweatherIcon'\r\n})\r\nexport class AccuweatherIconPipe implements PipeTransform {\r\n\r\n\r\n  transform(value: any): any {\r\n    if (value < 10) {\r\n      value = `0${value}`;\r\n    }\r\n    return `${icons}/${value}-s.png`;\r\n  }\r\n\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WeatherService {\r\n\r\n  apiKey = 'XXhoAfdvhAdPOhjR1CbGglFN2VJMyLHa';\r\n  language = 'en-us';\r\n  baseApi = 'https://dataservice.accuweather.com';\r\n  autoCompleteSearch = 'locations/v1/cities/autocomplete';\r\n  currentConditions = 'currentconditions/v1';\r\n  fiveDaysforecast = 'forecasts/v1/daily/5day';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAutoCompleteSerach(location) {\r\n    const autoCompleteSerach = {\r\n      apikey: this.apiKey,\r\n      q: location,\r\n      language: this.language\r\n    };\r\n    return this.http.get(`${this.baseApi}/${this.autoCompleteSearch}`, {params: autoCompleteSerach});\r\n  }\r\n\r\n  getCurrentConditions(location) {\r\n    const currentConditions = {\r\n      apikey: this.apiKey,\r\n      language: this.language\r\n    }\r\n    return this.http.get(`${this.baseApi}/${this.currentConditions}/${location}`, {params: currentConditions});\r\n  }\r\n\r\n  getTelAviv() {\r\n    return this.getCurrentConditions(215854);\r\n  }\r\n\r\n  getFiveDaysForecast(location) {\r\n    const fiveDaysforecast = {\r\n      apikey: this.apiKey,\r\n      language: this.language\r\n    }\r\n    return this.http.get(`${this.baseApi}/${this.fiveDaysforecast}/${location}`, {params: fiveDaysforecast});\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}